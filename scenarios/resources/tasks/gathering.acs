// Directives
#include "zcommon.acs"

// Global Variables
global int 0:reward;
global int 1:shaping_reward;

// Arena settings
int spawn_delay = 25;
int wall_min  = -1000.0;
int wall_max = 1000.0;

// Food and Poison settings
int food1_tid = 100;
int food2_tid = 101;
int food3_tid = 102;
int food4_tid = 103;
int food5_tid = 104;
int poison1_tid = 105;
int poison2_tid = 106;
int poison3_tid = 107;
int poison4_tid = 108;
int poison5_tid = 109;

int medikit_tid = 110;
int poison_tid = 111;

int food_health_array[10] = {5,10,15,20,25,-5,-10,-15,-20,-25};


// BEGINNING OF APPLES LIBRARY
str food_actor_array[10][1] = {{"RedApple"},{"RedApple"},{"RedApple"},{"RedApple"},{"RedApple"},{"BlueApple"},{"BlueApple"},{"BlueApple"},{"BlueApple"},{"BlueApple"}};

int start_food_quantity = 20;
int start_poison_quantity = 10;

// Functions for spawning Food
function void SpawnFood(int fid) {

    int tid = UniqueTID();
    str act = food_actor_array[fid][0];

    Spawn(act, random(wall_min+1.0,wall_max-1.0), random(wall_min+1.0,wall_max-1.0), 20.0,tid);
    SetThingSpecial(tid, ACS_NamedExecuteAlways, "FoodEffect", 0, fid);
}

function void RandomFood(void) {
    int fid = random(0,4);
    SpawnFood(fid);
}

function void RandomPoison(void) {
    int pid = random(5,9);
    SpawnFood(pid);
}

// Scripts that define map behaviour
script 1 OPEN {

    reward = 0;

    for(int i =0;i<start_food_quantity;++i) {

        RandomFood();
    }

    for(i =0;i<start_poison_quantity;++i) {

        RandomPoison();
    }

    while(1)
    {
        RandomFood();
        RandomPoison();
        delay(spawn_delay);
        RandomFood();
        delay(spawn_delay);
    }

}
script "FoodEffect" (int fid)
{
    int effect = food_health_array[fid];
    shaping_reward += 4*effect;
    Thing_Damage(0,-effect,MOD_SUICIDE);
}


script 4 ENTER
{
    int target_id = random(10,21);
    SetActorPosition(0, GetActorX(target_id), GetActorY(target_id), 0.0, 0);
    SetActorAngle(0,random(0.0,1.0));
    shaping_reward = 0;
    ClearInventory();


}

// getting health and shaping reward based on that

script 5 ENTER
{

    while(true)
    {

        int curr_health = PlayerHealth();
        curr_health = curr_health * 100;
        reward = reward + curr_health;
        //print(s:"This is reward: ", d:reward);
        //print(s:"This is reward: ", d:reward);
        delay(1);

    }
}
