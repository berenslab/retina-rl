// Directives
#library "GATHERIN"
#include "zcommon.acs"

// Global Variables
global int 0:reward;

// Arena settings
int spawn_delay = 20;
int wall_min  = -1000.0;
int wall_max = 1000.0;

// Frequency and amount of metabolic damage
int meta_ticks = 2;
int meta_damage = 1;

// Food health by food id
int food_health_array[10] = {5,10,15,20,25,-5,-10,-15,-20,-25};

int start_food_quantity = 20;
int start_poison_quantity = 10;

// Causes health/damage to player when item picked up; amount based on food id
script "FoodEffect" (int fid) {
    int effect = food_health_array[fid];
    Thing_Damage(0,-effect,MOD_SUICIDE);
}

// Spawning Food by food id
function void SpawnFood(int fid, str act) {

    int tid = UniqueTID();
    Spawn(act, random(wall_min+1.0,wall_max-1.0), random(wall_min+1.0,wall_max-1.0), 20.0,tid);
    SetThingSpecial(tid, ACS_NamedExecuteAlways, "FoodEffect", 0, fid);
}

// Random food index
function int randomFoodIndex(void) {
    int fid = random(0,4);
    return fid;
}

// Random poisonous food index
function int randomPoisonIndex(void) {
    int pid = random(5,9);
    return pid;
}

script "Agent Monitoring" ENTER {

    int act_x = random(wall_min,wall_max);
    int act_y = random(wall_min,wall_max);
    SetActorPosition(0, act_x, act_y, 0.0, 0);
    SetActorAngle(0,random(0.0,1.0));
    ClearInventory();

    int tcks = 0;

    while(true) {
        int curr_health = PlayerHealth();
        curr_health = curr_health * 100;
        reward = reward + curr_health;
        if (tcks == meta_ticks) {
            Thing_Damage(0,meta_damage);
            tcks = 0;
        } else {
            tcks = tcks + 1;
        }
        delay(1);
    }
}
