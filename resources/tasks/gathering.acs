// Directives

#library "GATHERIN"
#include "zcommon.acs"

// Variables

// Global Variables
// Reward
global int 0:reward;

// Frequency and amount of metabolic damage
global int 1:meta_delay;
global int 2:meta_damage;
global str 3:actor_names[];
global str 4:actor_num_textures[];

// Nourishment variables
global int 5:nourish_unique;
global int 6:nourish_init;
global int 7:nourish_delay;

// Poison variables
global int 8:poison_unique;
global int 9:poison_init;
global int 10:poison_delay;

// Obstacle variables
global int 11:obstacle_unique;
global int 12:obstacle_init;
global int 13:obstacle_delay;

// Distractor variables
global int 14:distract_unique;
global int 15:distract_init;
global int 16:distract_delay;

// Local variables
// Offsets
int poison_offset = nourish_unique;
int obstacle_offset = poison_offset + poison_unique;
int distract_offset = obstacle_offset + obstacles_unique;

// Arena settings
int wall_min  = -1000.0;
int wall_max = 1000.0;


// Spawning actor by index
function void SpawnActor(int oid) {

    int tid = UniqueTID();
    str act = actor_names[oid];

    str texture_num = random(0,actor_num_textures[oid] - 1);
    str code = objectCode(oid,texture_num);
    str texture = StrParam(s:"Tex",s:code);
    //print(s:state);
    Spawn(act, random(wall_min+1.0,wall_max-1.0), random(wall_min+1.0,wall_max-1.0), 20.0,tid);
    SetActorState(tid, texture);
}

// Object Codes

str alphas = "ABCDEFGHIJKLMNPQRSTUVWXYZ";

function str textureCode(int j) {

    int lett_one = GetChar(alphas, j / (26*26) );
    int lett_two = GetChar(alphas,(j/26) % 26);
    int lett_thr = GetChar(alphas,j % 26);
    str code = StrParam(c:lett_one, c:lett_two, c:lett_thr);

    return code;
}

function str objectCode(int oid, int j) {

    str food_code = GetChar(alphas,oid);
    str txt_code = textureCode(j);
    str code = strParam(c:food_code, s:txt_code);

    return code;
}

// Random object generation

function int randomNourishment(void) {
    int oid = random(0,num_nourish);
    SpawnFood(oid);
}

function int randomPoison(void) {
    int oid = random(poison_offset,poison_unique);
    SpawnFood(oid);
}

function int randomObstacle(void) {
    int oid = random(obstacle_offset,obstacle_unique);
    SpawnFood(oid);
}

function int randomDistractor(void) {
    int oid = random(distract_offset,distract_unique);
    SpawnFood(oid);
}

// Environment behaviour
script "Nourishment Spawning" OPEN {

    reward = 0;

    int i;

    for(i=0;i<nourish_init;++i) { randomNourishment(); }

    while(true) {
        delay(nourish_delay);
        randomNourishment();
    }
}

script "Poison Spawning" OPEN {

    int i;

    for(i=0;i<poison_init;++i) { randomPoison(); }

    while(true) {
        delay(poison_delay);
        randomPoison();
    }
}

script "Obstacle Spawning" OPEN {

    int i;

    for(i=0;i<obstacle_init;++i) { randomObstacle(); }

    while(true) {
        delay(obstacle_delay);
        randomObstacle();
    }
}

script "Distractor Spawning" OPEN {

    int i;

    for(i=0;i<distract_init;++i) { randomDistractor(); }

    while(true) {
        delay(distract_delay);
        randomDistractor();
    }
}

script "Agent Metabolism" ENTER {

    while(true) {
        delay(meta_delay);
        Thing_Damage(0,meta_damage);
    }
}

script "Agent Initialization" ENTER {

    int act_x = random(wall_min,wall_max);
    int act_y = random(wall_min,wall_max);
    SetActorPosition(0, act_x, act_y, 0.0, 0);
    SetActorAngle(0,random(0.0,1.0));
    ClearInventory();

    int tcks = 0;

    while(true) {
        int curr_health = PlayerHealth();
        curr_health = curr_health * 100;
        reward = reward + curr_health;
        delay(1);
    }
}

