name: dnn-decoder
sensors:
  vision:
    - ${dataset.num_colours}
    - ${dataset.vision_height}
    - ${dataset.vision_width}
connections:
  - ["vision", "cnn_encoder"]
  - ["cnn_encoder", "fc_feedforward"]
  - ["fc_feedforward", "classifier"]
  - ["fc_feedforward", "fc_feedbackward"]
  - ["fc_feedbackward", "decoder"]
circuits:
  cnn_encoder:
    _target_: retinal_rl.models.circuits.convolutional.ConvolutionalEncoder
    num_layers: 4
    num_channels: [16,32,64,64]
    kernel_size: ${kernel_size}
    stride:  ${stride}
    act_name: ${activation}
  fc_feedforward:
    _target_: retinal_rl.models.circuits.fully_connected.FullyConnectedEncoder
    output_shape:
      - ${latent_dimension}
    hidden_units: []
    act_name: ${activation}
  fc_feedbackward:
    _target_: retinal_rl.models.circuits.fully_connected.FullyConnectedDecoder
    output_shape: "fc_feedforward.input_shape"
    hidden_units: []
    act_name: ${activation}
  decoder:
    _target_: retinal_rl.models.circuits.convolutional.ConvolutionalDecoder
    num_layers: 4
    num_channels: [64,32,16,3]
    kernel_size: ${kernel_size}
    stride:  ${stride}
    act_name: ${activation}
  classifier:
    _target_: retinal_rl.models.circuits.task_head.linear_classifier.LinearClassifier
    num_classes: ${dataset.num_classes}
